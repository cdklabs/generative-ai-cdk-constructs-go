package generative-ai-cdk-constructs

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/cdklabs/generative-ai-cdk-constructs-go/generative-ai-cdk-constructs/jsii"

	"github.com/aws/aws-cdk-go/awscdk/v2/awsappsync"
	"github.com/aws/aws-cdk-go/awscdk/v2/awslambda"
	"github.com/aws/aws-cdk-go/awscdk/v2/awslogs"
	"github.com/aws/aws-cdk-go/awscdk/v2/awss3"
	"github.com/aws/constructs-go/constructs/v10"
)

// Class to create a BDA pattern with CDK.
// Experimental.
type BedrockDataAutomation interface {
	BaseClass
	// The Lambda function responsible for creating the Bedrock Data Automation blueprint.
	//
	// IMPORTANT: If isCustomBDABlueprintRequired is set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaBlueprintLambdaFunction() awslambda.Function
	// The S3 bucket for input data used by the Bedrock Data Automation process.
	//
	// IMPORTANT: If isCustomBDABlueprintRequired or isBDAInvocationRequired are set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaInputBucket() awss3.IBucket
	// The Lambda function responsible for invoking the Bedrock Data Automation process.
	//
	// IMPORTANT: If isBDAInvocationRequired is set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaInvocationFunction() awslambda.Function
	// The S3 bucket for output data generated by the Bedrock Data Automation process.
	//
	// IMPORTANT: If isBDAInvocationRequired is set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaOutputBucket() awss3.IBucket
	// The Lambda function responsible for handling the Bedrock Data Automation project.
	//
	// IMPORTANT: If isBDAProjectRequired is set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaProjectFunction() awslambda.Function
	// The Lambda function responsible for checking the status of the Bedrock Data Automation process.
	//
	// IMPORTANT: If isStatusRequired is set to false in Pattern Construct Props,
	// this property will be undefined.
	// Experimental.
	BdaResultStatusFunction() awslambda.Function
	// The Boto3 layer used in the Lambda functions for AWS SDK interactions.
	// Experimental.
	Boto3Layer() awslambda.LayerVersion
	// construct usage metric , added in template description.
	// Experimental.
	ConstructUsageMetric() *string
	// enable disable xray tracing.
	// Default: - True.
	//
	// Experimental.
	Enablexray() *bool
	// Experimental.
	SetEnablexray(val *bool)
	// Default  log config for all constructs.
	// Experimental.
	FieldLogLevel() awsappsync.FieldLogLevel
	// Experimental.
	SetFieldLogLevel(val awsappsync.FieldLogLevel)
	// enable disable lambda tracing.
	// Default: - Active.
	//
	// Experimental.
	LambdaTracing() awslambda.Tracing
	// Experimental.
	SetLambdaTracing(val awslambda.Tracing)
	// The tree node.
	// Experimental.
	Node() constructs.Node
	// The AWS Lambda Powertools layer used in the Lambda functions.
	// Experimental.
	PowertoolsLayer() awslambda.ILayerVersion
	// Default  log retention config for all constructs.
	// Experimental.
	Retention() awslogs.RetentionDays
	// Experimental.
	SetRetention(val awslogs.RetentionDays)
	// Value will be appended to resources name.
	// Default: - _dev.
	//
	// Experimental.
	Stage() *string
	// Experimental.
	SetStage(val *string)
	// Experimental.
	AddObservabilityToConstruct(props *BaseClassProps)
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
	// Experimental.
	UpdateConstructUsageMetricCode(props *BaseClassProps, scope constructs.Construct, lambdaFunctions *[]awslambda.DockerImageFunction)
	// Experimental.
	UpdateEnvSuffix(props *BaseClassProps)
}

// The jsii proxy struct for BedrockDataAutomation
type jsiiProxy_BedrockDataAutomation struct {
	jsiiProxy_BaseClass
}

func (j *jsiiProxy_BedrockDataAutomation) BdaBlueprintLambdaFunction() awslambda.Function {
	var returns awslambda.Function
	_jsii_.Get(
		j,
		"bdaBlueprintLambdaFunction",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) BdaInputBucket() awss3.IBucket {
	var returns awss3.IBucket
	_jsii_.Get(
		j,
		"bdaInputBucket",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) BdaInvocationFunction() awslambda.Function {
	var returns awslambda.Function
	_jsii_.Get(
		j,
		"bdaInvocationFunction",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) BdaOutputBucket() awss3.IBucket {
	var returns awss3.IBucket
	_jsii_.Get(
		j,
		"bdaOutputBucket",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) BdaProjectFunction() awslambda.Function {
	var returns awslambda.Function
	_jsii_.Get(
		j,
		"bdaProjectFunction",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) BdaResultStatusFunction() awslambda.Function {
	var returns awslambda.Function
	_jsii_.Get(
		j,
		"bdaResultStatusFunction",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) Boto3Layer() awslambda.LayerVersion {
	var returns awslambda.LayerVersion
	_jsii_.Get(
		j,
		"boto3Layer",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) ConstructUsageMetric() *string {
	var returns *string
	_jsii_.Get(
		j,
		"constructUsageMetric",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) Enablexray() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"enablexray",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) FieldLogLevel() awsappsync.FieldLogLevel {
	var returns awsappsync.FieldLogLevel
	_jsii_.Get(
		j,
		"fieldLogLevel",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) LambdaTracing() awslambda.Tracing {
	var returns awslambda.Tracing
	_jsii_.Get(
		j,
		"lambdaTracing",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) Node() constructs.Node {
	var returns constructs.Node
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) PowertoolsLayer() awslambda.ILayerVersion {
	var returns awslambda.ILayerVersion
	_jsii_.Get(
		j,
		"powertoolsLayer",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) Retention() awslogs.RetentionDays {
	var returns awslogs.RetentionDays
	_jsii_.Get(
		j,
		"retention",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_BedrockDataAutomation) Stage() *string {
	var returns *string
	_jsii_.Get(
		j,
		"stage",
		&returns,
	)
	return returns
}


// Experimental.
func NewBedrockDataAutomation(scope constructs.Construct, id *string, props *BedrockDataAutomationProps) BedrockDataAutomation {
	_init_.Initialize()

	if err := validateNewBedrockDataAutomationParameters(scope, id, props); err != nil {
		panic(err)
	}
	j := jsiiProxy_BedrockDataAutomation{}

	_jsii_.Create(
		"@cdklabs/generative-ai-cdk-constructs.BedrockDataAutomation",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Experimental.
func NewBedrockDataAutomation_Override(b BedrockDataAutomation, scope constructs.Construct, id *string, props *BedrockDataAutomationProps) {
	_init_.Initialize()

	_jsii_.Create(
		"@cdklabs/generative-ai-cdk-constructs.BedrockDataAutomation",
		[]interface{}{scope, id, props},
		b,
	)
}

func (j *jsiiProxy_BedrockDataAutomation)SetEnablexray(val *bool) {
	if err := j.validateSetEnablexrayParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"enablexray",
		val,
	)
}

func (j *jsiiProxy_BedrockDataAutomation)SetFieldLogLevel(val awsappsync.FieldLogLevel) {
	if err := j.validateSetFieldLogLevelParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"fieldLogLevel",
		val,
	)
}

func (j *jsiiProxy_BedrockDataAutomation)SetLambdaTracing(val awslambda.Tracing) {
	if err := j.validateSetLambdaTracingParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"lambdaTracing",
		val,
	)
}

func (j *jsiiProxy_BedrockDataAutomation)SetRetention(val awslogs.RetentionDays) {
	if err := j.validateSetRetentionParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"retention",
		val,
	)
}

func (j *jsiiProxy_BedrockDataAutomation)SetStage(val *string) {
	if err := j.validateSetStageParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"stage",
		val,
	)
}

// Checks if `x` is a construct.
//
// Use this method instead of `instanceof` to properly detect `Construct`
// instances, even when the construct library is symlinked.
//
// Explanation: in JavaScript, multiple copies of the `constructs` library on
// disk are seen as independent, completely different libraries. As a
// consequence, the class `Construct` in each copy of the `constructs` library
// is seen as a different class, and an instance of one class will not test as
// `instanceof` the other class. `npm install` will not create installations
// like this, but users may manually symlink construct libraries together or
// use a monorepo tool: in those cases, multiple copies of the `constructs`
// library can be accidentally installed, and `instanceof` will behave
// unpredictably. It is safest to avoid using `instanceof`, and using
// this type-testing method instead.
//
// Returns: true if `x` is an object created from a class which extends `Construct`.
// Experimental.
func BedrockDataAutomation_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	if err := validateBedrockDataAutomation_IsConstructParameters(x); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/generative-ai-cdk-constructs.BedrockDataAutomation",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

func BedrockDataAutomation_UsageMetricMap() *map[string]*float64 {
	_init_.Initialize()
	var returns *map[string]*float64
	_jsii_.StaticGet(
		"@cdklabs/generative-ai-cdk-constructs.BedrockDataAutomation",
		"usageMetricMap",
		&returns,
	)
	return returns
}

func BedrockDataAutomation_SetUsageMetricMap(val *map[string]*float64) {
	_init_.Initialize()
	if err := validateBedrockDataAutomation_SetUsageMetricMapParameters(val); err != nil {
		panic(err)
	}
	_jsii_.StaticSet(
		"@cdklabs/generative-ai-cdk-constructs.BedrockDataAutomation",
		"usageMetricMap",
		val,
	)
}

func (b *jsiiProxy_BedrockDataAutomation) AddObservabilityToConstruct(props *BaseClassProps) {
	if err := b.validateAddObservabilityToConstructParameters(props); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		b,
		"addObservabilityToConstruct",
		[]interface{}{props},
	)
}

func (b *jsiiProxy_BedrockDataAutomation) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		b,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (b *jsiiProxy_BedrockDataAutomation) UpdateConstructUsageMetricCode(props *BaseClassProps, scope constructs.Construct, lambdaFunctions *[]awslambda.DockerImageFunction) {
	if err := b.validateUpdateConstructUsageMetricCodeParameters(props, scope, lambdaFunctions); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		b,
		"updateConstructUsageMetricCode",
		[]interface{}{props, scope, lambdaFunctions},
	)
}

func (b *jsiiProxy_BedrockDataAutomation) UpdateEnvSuffix(props *BaseClassProps) {
	if err := b.validateUpdateEnvSuffixParameters(props); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		b,
		"updateEnvSuffix",
		[]interface{}{props},
	)
}

