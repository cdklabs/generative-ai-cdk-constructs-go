package bedrock

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/cdklabs/generative-ai-cdk-constructs-go/generative-ai-cdk-constructs/jsii"

	"github.com/aws/aws-cdk-go/awscdk/v2"
	"github.com/aws/aws-cdk-go/awscdk/v2/awsiam"
	"github.com/aws/aws-cdk-go/awscdk/v2/awskms"
	"github.com/aws/constructs-go/constructs/v10"
)

// Class to create (or import) an Agent with CDK.
// Experimental.
type Agent interface {
	AgentBase
	// The action groups associated with the agent.
	// Experimental.
	ActionGroups() *[]AgentActionGroup
	// Experimental.
	SetActionGroups(val *[]AgentActionGroup)
	// The ARN of the agent.
	// Experimental.
	AgentArn() *string
	// Agent collaboration type.
	// Experimental.
	AgentCollaboration() AgentCollaboratorType
	// Agent collaborators.
	// Experimental.
	AgentCollaborators() *[]AgentCollaborator
	// The unique identifier for the agent.
	// Experimental.
	AgentId() *string
	// The version of the agent.
	// Experimental.
	AgentVersion() *string
	// Experimental.
	SetAgentVersion(val *string)
	// Whether the agent can generate, run, and troubleshoot code when trying to complete a task.
	// Experimental.
	CodeInterpreterEnabled() *bool
	// Custom orchestration configuration.
	// Experimental.
	CustomOrchestration() *CustomOrchestration
	// The description for the agent.
	// Experimental.
	Description() *string
	// The environment this resource belongs to.
	//
	// For resources that are created and managed by the CDK
	// (generally, those created by creating new class instances like Role, Bucket, etc.),
	// this is always the same as the environment of the stack they belong to;
	// however, for imported resources
	// (those obtained from static methods like fromRoleArn, fromBucketName, etc.),
	// that might be different than the stack they were imported into.
	// Experimental.
	Env() *awscdk.ResourceEnvironment
	// Whether the resource will be deleted even if it's in use.
	// Experimental.
	ForceDelete() *bool
	// The foundation model used for orchestration by the agent.
	// Experimental.
	FoundationModel() IInvokable
	// The guardrail associated with the agent.
	// Experimental.
	Guardrail() IGuardrail
	// Experimental.
	SetGuardrail(val IGuardrail)
	// How long sessions should be kept open for the agent.
	// Experimental.
	IdleSessionTTL() awscdk.Duration
	// The instruction used by the agent.
	//
	// This determines how the agent will perform his task.
	// Experimental.
	Instruction() *string
	// Optional KMS encryption key associated with this agent.
	// Experimental.
	KmsKey() awskms.IKey
	// The KnowledgeBases associated with the agent.
	// Experimental.
	KnowledgeBases() *[]IKnowledgeBase
	// Experimental.
	SetKnowledgeBases(val *[]IKnowledgeBase)
	// When this agent was last updated.
	// Experimental.
	LastUpdated() *string
	// The memory configuration for the agent.
	// Experimental.
	Memory() Memory
	// The name of the agent.
	// Experimental.
	Name() *string
	// The tree node.
	// Experimental.
	Node() constructs.Node
	// The type of orchestration for the agent.
	// Experimental.
	OrchestrationType() OrchestrationType
	// Returns a string-encoded token that resolves to the physical name that should be passed to the CloudFormation resource.
	//
	// This value will resolve to one of the following:
	// - a concrete value (e.g. `"my-awesome-bucket"`)
	// - `undefined`, when a name should be generated by CloudFormation
	// - a concrete name generated automatically during synthesis, in
	//   cross-environment scenarios.
	// Experimental.
	PhysicalName() *string
	// Overrides some prompt templates in different parts of an agent sequence configuration.
	// Default: - No overrides are provided.
	//
	// Experimental.
	PromptOverrideConfiguration() PromptOverrideConfiguration
	// The IAM role associated to the agent.
	// Experimental.
	Role() awsiam.IRole
	// Whether the agent will automatically update the DRAFT version of the agent after making changes to the agent.
	// Experimental.
	ShouldPrepareAgent() *bool
	// The stack in which this resource is defined.
	// Experimental.
	Stack() awscdk.Stack
	// The default test alias for this agent.
	//
	// This corresponds to the test alias
	// (`TSTALIASID`) that points to the working (`DRAFT`) version.
	// Experimental.
	TestAlias() IAgentAlias
	// Whether the agent can prompt additional information from the user when it does not have enough information to respond to an utterance.
	// Experimental.
	UserInputEnabled() *bool
	// Add an action group to the agent.
	// Experimental.
	AddActionGroup(actionGroup AgentActionGroup)
	// Add multiple action groups to the agent.
	// Experimental.
	AddActionGroups(actionGroups ...AgentActionGroup)
	// Add an agent collaborator to the agent.
	// Experimental.
	AddAgentCollaborator(agentCollaborator AgentCollaborator)
	// Add guardrail to the agent.
	// Experimental.
	AddGuardrail(guardrail IGuardrail)
	// Add knowledge base to the agent.
	// Experimental.
	AddKnowledgeBase(knowledgeBase IKnowledgeBase)
	// Apply the given removal policy to this resource.
	//
	// The Removal Policy controls what happens to this resource when it stops
	// being managed by CloudFormation, either because you've removed it from the
	// CDK application or because you've made a change that requires the resource
	// to be replaced.
	//
	// The resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS
	// account for data recovery and cleanup later (`RemovalPolicy.RETAIN`).
	// Experimental.
	ApplyRemovalPolicy(policy awscdk.RemovalPolicy)
	// Experimental.
	GeneratePhysicalName() *string
	// Returns an environment-sensitive token that should be used for the resource's "ARN" attribute (e.g. `bucket.bucketArn`).
	//
	// Normally, this token will resolve to `arnAttr`, but if the resource is
	// referenced across environments, `arnComponents` will be used to synthesize
	// a concrete ARN with the resource's physical name. Make sure to reference
	// `this.physicalName` in `arnComponents`.
	// Experimental.
	GetResourceArnAttribute(arnAttr *string, arnComponents *awscdk.ArnComponents) *string
	// Returns an environment-sensitive token that should be used for the resource's "name" attribute (e.g. `bucket.bucketName`).
	//
	// Normally, this token will resolve to `nameAttr`, but if the resource is
	// referenced across environments, it will be resolved to `this.physicalName`,
	// which will be a concrete name.
	// Experimental.
	GetResourceNameAttribute(nameAttr *string) *string
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
}

// The jsii proxy struct for Agent
type jsiiProxy_Agent struct {
	jsiiProxy_AgentBase
}

func (j *jsiiProxy_Agent) ActionGroups() *[]AgentActionGroup {
	var returns *[]AgentActionGroup
	_jsii_.Get(
		j,
		"actionGroups",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) AgentArn() *string {
	var returns *string
	_jsii_.Get(
		j,
		"agentArn",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) AgentCollaboration() AgentCollaboratorType {
	var returns AgentCollaboratorType
	_jsii_.Get(
		j,
		"agentCollaboration",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) AgentCollaborators() *[]AgentCollaborator {
	var returns *[]AgentCollaborator
	_jsii_.Get(
		j,
		"agentCollaborators",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) AgentId() *string {
	var returns *string
	_jsii_.Get(
		j,
		"agentId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) AgentVersion() *string {
	var returns *string
	_jsii_.Get(
		j,
		"agentVersion",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) CodeInterpreterEnabled() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"codeInterpreterEnabled",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) CustomOrchestration() *CustomOrchestration {
	var returns *CustomOrchestration
	_jsii_.Get(
		j,
		"customOrchestration",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Description() *string {
	var returns *string
	_jsii_.Get(
		j,
		"description",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Env() *awscdk.ResourceEnvironment {
	var returns *awscdk.ResourceEnvironment
	_jsii_.Get(
		j,
		"env",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) ForceDelete() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"forceDelete",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) FoundationModel() IInvokable {
	var returns IInvokable
	_jsii_.Get(
		j,
		"foundationModel",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Guardrail() IGuardrail {
	var returns IGuardrail
	_jsii_.Get(
		j,
		"guardrail",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) IdleSessionTTL() awscdk.Duration {
	var returns awscdk.Duration
	_jsii_.Get(
		j,
		"idleSessionTTL",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Instruction() *string {
	var returns *string
	_jsii_.Get(
		j,
		"instruction",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) KmsKey() awskms.IKey {
	var returns awskms.IKey
	_jsii_.Get(
		j,
		"kmsKey",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) KnowledgeBases() *[]IKnowledgeBase {
	var returns *[]IKnowledgeBase
	_jsii_.Get(
		j,
		"knowledgeBases",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) LastUpdated() *string {
	var returns *string
	_jsii_.Get(
		j,
		"lastUpdated",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Memory() Memory {
	var returns Memory
	_jsii_.Get(
		j,
		"memory",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Node() constructs.Node {
	var returns constructs.Node
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) OrchestrationType() OrchestrationType {
	var returns OrchestrationType
	_jsii_.Get(
		j,
		"orchestrationType",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) PhysicalName() *string {
	var returns *string
	_jsii_.Get(
		j,
		"physicalName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) PromptOverrideConfiguration() PromptOverrideConfiguration {
	var returns PromptOverrideConfiguration
	_jsii_.Get(
		j,
		"promptOverrideConfiguration",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Role() awsiam.IRole {
	var returns awsiam.IRole
	_jsii_.Get(
		j,
		"role",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) ShouldPrepareAgent() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"shouldPrepareAgent",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) Stack() awscdk.Stack {
	var returns awscdk.Stack
	_jsii_.Get(
		j,
		"stack",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) TestAlias() IAgentAlias {
	var returns IAgentAlias
	_jsii_.Get(
		j,
		"testAlias",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_Agent) UserInputEnabled() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"userInputEnabled",
		&returns,
	)
	return returns
}


// Experimental.
func NewAgent(scope constructs.Construct, id *string, props *AgentProps) Agent {
	_init_.Initialize()

	if err := validateNewAgentParameters(scope, id, props); err != nil {
		panic(err)
	}
	j := jsiiProxy_Agent{}

	_jsii_.Create(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Experimental.
func NewAgent_Override(a Agent, scope constructs.Construct, id *string, props *AgentProps) {
	_init_.Initialize()

	_jsii_.Create(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		[]interface{}{scope, id, props},
		a,
	)
}

func (j *jsiiProxy_Agent)SetActionGroups(val *[]AgentActionGroup) {
	if err := j.validateSetActionGroupsParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"actionGroups",
		val,
	)
}

func (j *jsiiProxy_Agent)SetAgentVersion(val *string) {
	if err := j.validateSetAgentVersionParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"agentVersion",
		val,
	)
}

func (j *jsiiProxy_Agent)SetGuardrail(val IGuardrail) {
	_jsii_.Set(
		j,
		"guardrail",
		val,
	)
}

func (j *jsiiProxy_Agent)SetKnowledgeBases(val *[]IKnowledgeBase) {
	if err := j.validateSetKnowledgeBasesParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"knowledgeBases",
		val,
	)
}

// Static Method for importing an existing Bedrock Agent.
// Experimental.
func Agent_FromAgentAttrs(scope constructs.Construct, id *string, attrs *AgentAttributes) IAgent {
	_init_.Initialize()

	if err := validateAgent_FromAgentAttrsParameters(scope, id, attrs); err != nil {
		panic(err)
	}
	var returns IAgent

	_jsii_.StaticInvoke(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		"fromAgentAttrs",
		[]interface{}{scope, id, attrs},
		&returns,
	)

	return returns
}

// Checks if `x` is a construct.
//
// Use this method instead of `instanceof` to properly detect `Construct`
// instances, even when the construct library is symlinked.
//
// Explanation: in JavaScript, multiple copies of the `constructs` library on
// disk are seen as independent, completely different libraries. As a
// consequence, the class `Construct` in each copy of the `constructs` library
// is seen as a different class, and an instance of one class will not test as
// `instanceof` the other class. `npm install` will not create installations
// like this, but users may manually symlink construct libraries together or
// use a monorepo tool: in those cases, multiple copies of the `constructs`
// library can be accidentally installed, and `instanceof` will behave
// unpredictably. It is safest to avoid using `instanceof`, and using
// this type-testing method instead.
//
// Returns: true if `x` is an object created from a class which extends `Construct`.
// Experimental.
func Agent_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	if err := validateAgent_IsConstructParameters(x); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

// Returns true if the construct was created by CDK, and false otherwise.
// Experimental.
func Agent_IsOwnedResource(construct constructs.IConstruct) *bool {
	_init_.Initialize()

	if err := validateAgent_IsOwnedResourceParameters(construct); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		"isOwnedResource",
		[]interface{}{construct},
		&returns,
	)

	return returns
}

// Check whether the given construct is a Resource.
// Experimental.
func Agent_IsResource(construct constructs.IConstruct) *bool {
	_init_.Initialize()

	if err := validateAgent_IsResourceParameters(construct); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/generative-ai-cdk-constructs.bedrock.Agent",
		"isResource",
		[]interface{}{construct},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_Agent) AddActionGroup(actionGroup AgentActionGroup) {
	if err := a.validateAddActionGroupParameters(actionGroup); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"addActionGroup",
		[]interface{}{actionGroup},
	)
}

func (a *jsiiProxy_Agent) AddActionGroups(actionGroups ...AgentActionGroup) {
	args := []interface{}{}
	for _, a := range actionGroups {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		a,
		"addActionGroups",
		args,
	)
}

func (a *jsiiProxy_Agent) AddAgentCollaborator(agentCollaborator AgentCollaborator) {
	if err := a.validateAddAgentCollaboratorParameters(agentCollaborator); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"addAgentCollaborator",
		[]interface{}{agentCollaborator},
	)
}

func (a *jsiiProxy_Agent) AddGuardrail(guardrail IGuardrail) {
	if err := a.validateAddGuardrailParameters(guardrail); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"addGuardrail",
		[]interface{}{guardrail},
	)
}

func (a *jsiiProxy_Agent) AddKnowledgeBase(knowledgeBase IKnowledgeBase) {
	if err := a.validateAddKnowledgeBaseParameters(knowledgeBase); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"addKnowledgeBase",
		[]interface{}{knowledgeBase},
	)
}

func (a *jsiiProxy_Agent) ApplyRemovalPolicy(policy awscdk.RemovalPolicy) {
	if err := a.validateApplyRemovalPolicyParameters(policy); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"applyRemovalPolicy",
		[]interface{}{policy},
	)
}

func (a *jsiiProxy_Agent) GeneratePhysicalName() *string {
	var returns *string

	_jsii_.Invoke(
		a,
		"generatePhysicalName",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (a *jsiiProxy_Agent) GetResourceArnAttribute(arnAttr *string, arnComponents *awscdk.ArnComponents) *string {
	if err := a.validateGetResourceArnAttributeParameters(arnAttr, arnComponents); err != nil {
		panic(err)
	}
	var returns *string

	_jsii_.Invoke(
		a,
		"getResourceArnAttribute",
		[]interface{}{arnAttr, arnComponents},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_Agent) GetResourceNameAttribute(nameAttr *string) *string {
	if err := a.validateGetResourceNameAttributeParameters(nameAttr); err != nil {
		panic(err)
	}
	var returns *string

	_jsii_.Invoke(
		a,
		"getResourceNameAttribute",
		[]interface{}{nameAttr},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_Agent) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		a,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

